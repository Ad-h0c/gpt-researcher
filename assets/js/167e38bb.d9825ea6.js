"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9195],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>g});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,g=u["".concat(l,".").concat(m)]||u[m]||y[m]||a;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},714:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(8168),o=(r(6540),r(5680));const a={},i="Filtering by Domain",c={unversionedId:"gpt-researcher/context/filtering-by-domain",id:"gpt-researcher/context/filtering-by-domain",isDocsHomePage:!1,title:"Filtering by Domain",description:"If you set Google as a Retriever, you can filter web results by site.",source:"@site/docs/gpt-researcher/context/filtering-by-domain.md",sourceDirName:"gpt-researcher/context",slug:"/gpt-researcher/context/filtering-by-domain",permalink:"/docs/gpt-researcher/context/filtering-by-domain",editUrl:"https://github.com/assafelovic/gpt-researcher/tree/master/docs/docs/gpt-researcher/context/filtering-by-domain.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Research on Local Documents",permalink:"/docs/gpt-researcher/context/local-docs"},next:{title:"Vector Stores",permalink:"/docs/gpt-researcher/context/vector-stores"}},l=[],s={toc:l},p="wrapper";function u(e){let{components:t,...r}=e;return(0,o.yg)(p,(0,n.A)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"filtering-by-domain"},"Filtering by Domain"),(0,o.yg)("p",null,"If you set Google as a Retriever, you can filter web results by site."),(0,o.yg)("p",null,"For example, set in the query param you pass the GPTResearcher class instance: ",(0,o.yg)("inlineCode",{parentName:"p"},'query="site:linkedin.com a python web developer to implement my custom gpt-researcher flow"')," will limit the results to linkedin.com"),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("strong",{parentName:"p"},"Step 1")," -  Set these environment variables with a .env file in the root folder")),(0,o.yg)("p",null,"TAVILY_API_KEY=\nLANGCHAIN_TRACING_V2=true\nLANGCHAIN_API_KEY=\nOPENAI_API_KEY=\nDOC_PATH=./my-docs\nRETRIEVER=google\nGOOGLE_API_KEY=\nGOOGLE_CX_KEY="),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("strong",{parentName:"p"},"Step 2")," -  from the root project run:")),(0,o.yg)("p",null,"docker-compose up -- build"),(0,o.yg)("blockquote",null,(0,o.yg)("p",{parentName:"blockquote"},(0,o.yg)("strong",{parentName:"p"},"Step 3")," -  from the frontend input box in localhost:3000, you can append any google search filter (such as filtering by domain names)")))}u.isMDXComponent=!0}}]);